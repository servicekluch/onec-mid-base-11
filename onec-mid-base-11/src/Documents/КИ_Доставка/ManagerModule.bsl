
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ПриОпределенииНастроекПечати(НастройкиОбъекта) Экспорт	
	НастройкиОбъекта.ПриДобавленииКомандПечати = Истина;
КонецПроцедуры

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Анкета клиента
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнкетаКлиента";
	КомандаПечати.Представление = НСтр("ru = 'Анкета'");
	КомандаПечати.Порядок = 5;
	
	// Транспортная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТранспортнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Транспортная накладная'");
	КомандаПечати.Порядок = 10; 
	
	// Договор на поставку
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ДоговорНаПоставку";
	КомандаПечати.Представление = НСтр("ru = 'Договор на поставку'");
	КомандаПечати.Порядок = 15;
	КомандаПечати.Картинка = БиблиотекаКартинок.ФорматWord;
	
	// Комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнкетаКлиента,ТранспортнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Комплект документов'");
	КомандаПечати.Порядок = 20;  
	
	// Договор на поставку
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "УправлениеПечатью";
	КомандаПечати.Идентификатор = "Документ.КИ_Доставка.ПФ_DOC_Договор_new";
	КомандаПечати.Представление = НСтр("ru = 'Договор на поставку new'");
	КомандаПечати.Порядок = 25;
	КомандаПечати.Картинка = БиблиотекаКартинок.ФорматWord;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АнкетаКлиента");
	Если ПечатнаяФорма <> Неопределено Тогда
	    ПечатнаяФорма.ТабличныйДокумент = ПечатьАнкеты(МассивОбъектов, ОбъектыПечати);
	    ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Анкета клиента'");
	    ПечатнаяФорма.ПолныйПутьКМакету = "Документ.КИ_Доставка.ПФ_MXL_Анкета_клиента";
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ТранспортнаяНакладная");
	Если ПечатнаяФорма <> Неопределено Тогда
	    ПечатнаяФорма.ТабличныйДокумент = ПечатьТранспортнойНакладной(МассивОбъектов, ОбъектыПечати);
	    ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Транспортная накладная'");
	    ПечатнаяФорма.ПолныйПутьКМакету = "Документ.КИ_Доставка.ПФ_MXL_Транспортная_накладная";
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ДоговорНаПоставку");
	Если ПечатнаяФорма <> Неопределено Тогда
	    ПечатнаяФорма.ОфисныеДокументы = ПечатьДоговораНаПоставку(МассивОбъектов);
	    ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Договор на поставку'");
	КонецЕсли;

	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьАнкеты(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АнкетаКлиента";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КИ_Доставка.ПФ_MXL_Анкета_клиента");
	
	ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиЗаголовокАнкеты(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиШапку(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиПодвал(ДанныеДокументов, ТабличныйДокумент, Макет);
		
        // В табличном документе необходимо задать имя области, в которую был 
        // выведен объект. Нужно для возможности печати комплектов документов.
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
            НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
		
	КонецЦикла;	
		
	Возврат ТабличныйДокумент;
	
КонецФункции  

Функция ПечатьТранспортнойНакладной(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ТранспортнаяНакладная";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КИ_Доставка.ПФ_MXL_Транспортная_накладная");
	
	ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиЗаголовокТранспортнойНакладной(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиШапку(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиТовары(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиПодвал(ДанныеДокументов, ТабличныйДокумент, Макет);
		
        // В табличном документе необходимо задать имя области, в которую был 
        // выведен объект. Нужно для возможности печати комплектов документов.
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
            НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
		
	КонецЦикла;	
		
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьДоговораНаПоставку(МассивОбъектов)
	
	ОфисныеДокументы = Новый Соответствие;	
	
	Для Каждого Ссылка Из МассивОбъектов Цикл		
		ШаблонНазвания = "Договор № %1 от %2";
		НазваниеФайла = СтрШаблон(ШаблонНазвания,
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Ссылка.Номер),
			Формат(Ссылка.Дата, "ДЛФ=DD"));

		АдресДокумента = ВывестиДанныеДоговора(Ссылка);
		
		ОфисныеДокументы.Вставить(АдресДокумента, НазваниеФайла); 
		
	КонецЦикла;	
		
	Возврат ОфисныеДокументы;
	
КонецФункции 

Функция ВывестиДанныеДоговора(Ссылка)
	
	// Подготавливаем макет для формирования печатной формы OpenXML
    МакетДокумента = УправлениеПечатью.МакетПечатнойФормы("Документ.КИ_Доставка.ПФ_DOC_ДоговорНаПоставку");
    Макет = УправлениеПечатью.ИнициализироватьМакетОфисногоДокумента(МакетДокумента, Неопределено);
	
	// Создаем структуру областей формируемой печатной формы OpenXМL
	ОписаниеОбластей = Новый Структура;
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Заголовок", "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Подвал", "Общая");

	// Подготавливаем печатную форму в формате офисного документа
	ПечатнаяФорма = УправлениеПечатью.ИнициализироватьПечатнуюФорму(Неопределено, Неопределено, Макет);  
	
	ДанныеДляПечати = ПолучитьДанныеДляДоговора(Ссылка);
	ДанныеДокумента = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ДанныеДляПечати[0]);

	ДанныеОснованияКонтактногоЛица = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеДокумента.КИ_КонтактноеЛицо,
									"ДействуетНаОсновании, Наименование"); 
	
	ДанныеРуководителя = ОтветственноеЛицо(ДанныеДокумента.Организация);
	
	ОтветственныйОрганизации = КонтактнаяИнформация(ДанныеДокумента.Организация);
	ДанныеИННКППОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеДокумента.Организация,
									"ИНН, КПП"); 
	
	ОтветственныйКонтрагента = КонтактнаяИнформация(ДанныеДокумента.Контрагент);
	ДанныеИННКППКонтрагента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеДокумента.Контрагент,
									"ИНН, КПП");
	ДанныеДокумента.Вставить("Год", Формат(ДанныеДокумента.Дата, "ДФ=yyyy"));
	ДанныеДокумента.Дата = Формат(ДанныеДокумента.Дата, "ДЛФ=DD");
	ДанныеДокумента.Вставить("КонтактноеЛицо", ДанныеОснованияКонтактногоЛица.Наименование);
	ДанныеДокумента.Вставить("КонтактноеЛицоОснование", ДанныеОснованияКонтактногоЛица.ДействуетНаОсновании);
	ДанныеДокумента.Вставить("Руководитель", ДанныеРуководителя.ФИО);
	ДанныеДокумента.Вставить("Основание", ДанныеРуководителя.Основание);

	ДанныеДокумента.Вставить("ЮрАдресОрганизации", ОтветственныйОрганизации.ЮридическийАдрес);
	ДанныеДокумента.Вставить("ФактАдресОрганизации", ОтветственныйОрганизации.ФактическийАдрес);
	ДанныеДокумента.Вставить("ИННОрганизации", ДанныеИННКППОрганизации.ИНН);
	ДанныеДокумента.Вставить("КППОрганизации", ДанныеИННКППОрганизации.КПП);

	ДанныеДокумента.Вставить("ЮрАдресКонтрагента", ОтветственныйОрганизации.ЮридическийАдрес);
	ДанныеДокумента.Вставить("ФактАдресКонтрагента", ОтветственныйОрганизации.ФактическийАдрес);
	ДанныеДокумента.Вставить("ИННКонтрагента", ДанныеИННКППКонтрагента.ИНН);
	ДанныеДокумента.Вставить("КППКонтрагента", ДанныеИННКППКонтрагента.КПП);

	// Вывод заголовка
	Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["Заголовок"]);
	УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеДокумента);	

	// Вывод подвала
	Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["Подвал"]);
	УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеДокумента);	

	// Помещаем сформированную печатную форму в соответствие ОфисныеДокументы
	АдресХранилищаПечатнойФормы = УправлениеПечатью.СформироватьДокумент(ПечатнаяФорма);
	
	//удаление временных файлов
	УправлениеПечатью.ОчиститьСсылки(ПечатнаяФорма);	
	УправлениеПечатью.ОчиститьСсылки(Макет);

	Возврат АдресХранилищаПечатнойФормы;
	
КонецФункции 

Функция ПолучитьДанныеДляДоговора(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КИ_Доставка.Ссылка КАК Ссылка,
	               |	КИ_Доставка.Номер КАК Номер,
	               |	КИ_Доставка.Дата КАК Дата,
	               |	КИ_Доставка.Организация КАК Организация,
	               |	КИ_Доставка.Контрагент КАК Контрагент,
	               |	КИ_Доставка.Договор КАК Договор,
	               |	КИ_Доставка.АдресДоставки КАК АдресДоставки,
	               |	КИ_Доставка.Ответственный КАК Ответственный,
	               |	РеализацияТоваровУслуг.КИ_КонтактноеЛицо КАК КИ_КонтактноеЛицо
	               |ИЗ
	               |	Документ.КИ_Доставка КАК КИ_Доставка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |		ПО КИ_Доставка.Основание = РеализацияТоваровУслуг.Ссылка
	               |ГДЕ
	               |	КИ_Доставка.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции 

Функция ПолучитьДанныеДокументов(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КИ_Доставка.Ссылка КАК Ссылка,
	               |	КИ_Доставка.Номер КАК Номер,
	               |	КИ_Доставка.Дата КАК Дата,
	               |	КИ_Доставка.Организация КАК Организация,
	               |	КИ_Доставка.Контрагент КАК Контрагент,
	               |	КИ_Доставка.Договор КАК Договор,
	               |	КИ_Доставка.АдресДоставки КАК АдресДоставки,  
	               |	КИ_Доставка.Основание КАК Основание,
	               |	КИ_Доставка.Ответственный КАК Ответственный,
	               |	КИ_Доставка.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество
	               |	) КАК Товары
	               |ИЗ
	               |	Документ.КИ_Доставка КАК КИ_Доставка
	               |ГДЕ
	               |	КИ_Доставка.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции 

Функция КонтактнаяИнформация(СправочникСсылка)
	
 МассивСсылок = Новый Массив;
 МассивСсылок.Добавить(СправочникСсылка);
 
 МассивТипов = Новый Массив;
 МассивТипов.Добавить(Перечисления.ТипыКонтактнойИнформации.Адрес); 
 
 СтруктураАдресов = Новый Структура;
 
 ТаблицаЗначенийАдресов = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивСсылок,МассивТипов);
 Для Каждого Строка Из ТаблицаЗначенийАдресов Цикл
	Если ТипЗнч(СправочникСсылка) = Тип("СправочникСсылка.Организации") Тогда 
		Если Строка.Вид.ИдентификаторДляФормул = "ФактическийАдрес" Тогда
			СтруктураАдресов.Вставить("ФактическийАдрес",Строка.Представление);
		ИначеЕсли Строка.Вид.ИдентификаторДляФормул = "Адрес" Тогда
			СтруктураАдресов.Вставить("ЮридическийАдрес",Строка.Представление);
		КонецЕсли;
	ИначеЕсли ТипЗнч(СправочникСсылка) = Тип("СправочникСсылка.Контрагенты") Тогда
		Если Строка.Вид.ИдентификаторДляФормул = "ФактическийАдрес" Тогда
			СтруктураАдресов.Вставить("ФактическийАдрес",Строка.Представление);
		ИначеЕсли Строка.Вид.ИдентификаторДляФормул = "Адрес" Тогда
			СтруктураАдресов.Вставить("ЮридическийАдрес",Строка.Представление);
		КонецЕсли;
	КонецЕсли;
 КонецЦикла; 

 Возврат СтруктураАдресов;
	
КонецФункции   

Функция ОтветственноеЛицо(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОрганизацииДополнительныеРеквизиты.Значение КАК Значение,
	               |	ОрганизацииДополнительныеРеквизиты.Свойство КАК Свойство
	               |ИЗ
	               |	Справочник.Организации.ДополнительныеРеквизиты КАК ОрганизацииДополнительныеРеквизиты
	               |ГДЕ
	               |	ОрганизацииДополнительныеРеквизиты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	
	Выборка = Запрос.Выполнить().Выбрать();
 	Структура = Новый Структура;
	Пока Выборка.Следующий() Цикл 
		Если Выборка.Свойство.ИдентификаторДляФормул = "Руководитель" Тогда
			Структура.Вставить("ФИО", Выборка.Значение);	
		ИначеЕсли Выборка.Свойство.ИдентификаторДляФормул = "Основание" Тогда
			Структура.Вставить("Основание", Выборка.Значение);	
		КонецЕсли;
	КонецЦикла;
	
	Возврат Структура;
	
КонецФункции

Процедура ВывестиЗаголовокАнкеты(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьЗаголовокДокумента = Макет.ПолучитьОбласть("Заголовок");
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("Ссылка", ДанныеДокументов.Ссылка);

	ШаблонЗаголовка = "Анкета о доставки %1 от %2";
	ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка,
		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер),
		Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));
	ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
	
	ОбластьЗаголовокДокумента.Параметры.Заполнить(ДанныеПечати);
	
	ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(ДанныеДокументов.Ссылка, 1, 120);
	
	Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
	    ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
	                |Технические подробности см. в журнале регистрации.'");
	    ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	Иначе
	    КартинкаQRКода = Новый Картинка(ДанныеQRКода);
	    ОбластьЗаголовокДокумента.Рисунки.QRКодДокумента.Картинка = КартинкаQRКода;
	КонецЕсли;

	ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);
	
КонецПроцедуры 

Процедура ВывестиЗаголовокТранспортнойНакладной(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьЗаголовокДокумента = Макет.ПолучитьОбласть("Заголовок");
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("Ссылка", ДанныеДокументов.Ссылка);

	ШаблонЗаголовка = "Транспортная накладная %1 от %2";
	ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка,
		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер),
		Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));
	ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);     
	
	ДанныеПечати.Вставить("Грузоотправитель", ДанныеДокументов.Организация);
	ДанныеПечати.Вставить("Грузополучатель", ДанныеДокументов.Контрагент);

	ОбластьЗаголовокДокумента.Параметры.Заполнить(ДанныеПечати);
	
	ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(ДанныеДокументов.Ссылка, 1, 120);
	
	Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
	    ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
	                |Технические подробности см. в журнале регистрации.'");
	    ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	Иначе
	    КартинкаQRКода = Новый Картинка(ДанныеQRКода);
	    ОбластьЗаголовокДокумента.Рисунки.QRКодДокумента.Картинка = КартинкаQRКода;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);
	
КонецПроцедуры  

Процедура ВывестиШапку(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Шапка");

	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ВывестиТовары(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	ВыборкаТовары = ДанныеДокументов.Товары.Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		ОбластьСтрока.Параметры.Заполнить(ВыборкаТовары);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиПодвал(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");

	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли